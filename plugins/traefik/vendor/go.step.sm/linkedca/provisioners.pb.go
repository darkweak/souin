// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: linkedca/provisioners.proto

package linkedca

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Provisioner_Type int32

const (
	Provisioner_NOOP   Provisioner_Type = 0
	Provisioner_JWK    Provisioner_Type = 1
	Provisioner_OIDC   Provisioner_Type = 2
	Provisioner_GCP    Provisioner_Type = 3
	Provisioner_AWS    Provisioner_Type = 4
	Provisioner_AZURE  Provisioner_Type = 5
	Provisioner_ACME   Provisioner_Type = 6
	Provisioner_X5C    Provisioner_Type = 7
	Provisioner_K8SSA  Provisioner_Type = 8
	Provisioner_SSHPOP Provisioner_Type = 9
	Provisioner_SCEP   Provisioner_Type = 10
	Provisioner_NEBULA Provisioner_Type = 11
)

// Enum value maps for Provisioner_Type.
var (
	Provisioner_Type_name = map[int32]string{
		0:  "NOOP",
		1:  "JWK",
		2:  "OIDC",
		3:  "GCP",
		4:  "AWS",
		5:  "AZURE",
		6:  "ACME",
		7:  "X5C",
		8:  "K8SSA",
		9:  "SSHPOP",
		10: "SCEP",
		11: "NEBULA",
	}
	Provisioner_Type_value = map[string]int32{
		"NOOP":   0,
		"JWK":    1,
		"OIDC":   2,
		"GCP":    3,
		"AWS":    4,
		"AZURE":  5,
		"ACME":   6,
		"X5C":    7,
		"K8SSA":  8,
		"SSHPOP": 9,
		"SCEP":   10,
		"NEBULA": 11,
	}
)

func (x Provisioner_Type) Enum() *Provisioner_Type {
	p := new(Provisioner_Type)
	*p = x
	return p
}

func (x Provisioner_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provisioner_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_linkedca_provisioners_proto_enumTypes[0].Descriptor()
}

func (Provisioner_Type) Type() protoreflect.EnumType {
	return &file_linkedca_provisioners_proto_enumTypes[0]
}

func (x Provisioner_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provisioner_Type.Descriptor instead.
func (Provisioner_Type) EnumDescriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{0, 0}
}

type ACMEProvisioner_ChallengeType int32

const (
	ACMEProvisioner_UNKNOWN          ACMEProvisioner_ChallengeType = 0
	ACMEProvisioner_HTTP_01          ACMEProvisioner_ChallengeType = 1
	ACMEProvisioner_DNS_01           ACMEProvisioner_ChallengeType = 2
	ACMEProvisioner_TLS_ALPN_01      ACMEProvisioner_ChallengeType = 3
	ACMEProvisioner_DEVICE_ATTEST_01 ACMEProvisioner_ChallengeType = 4
)

// Enum value maps for ACMEProvisioner_ChallengeType.
var (
	ACMEProvisioner_ChallengeType_name = map[int32]string{
		0: "UNKNOWN",
		1: "HTTP_01",
		2: "DNS_01",
		3: "TLS_ALPN_01",
		4: "DEVICE_ATTEST_01",
	}
	ACMEProvisioner_ChallengeType_value = map[string]int32{
		"UNKNOWN":          0,
		"HTTP_01":          1,
		"DNS_01":           2,
		"TLS_ALPN_01":      3,
		"DEVICE_ATTEST_01": 4,
	}
)

func (x ACMEProvisioner_ChallengeType) Enum() *ACMEProvisioner_ChallengeType {
	p := new(ACMEProvisioner_ChallengeType)
	*p = x
	return p
}

func (x ACMEProvisioner_ChallengeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACMEProvisioner_ChallengeType) Descriptor() protoreflect.EnumDescriptor {
	return file_linkedca_provisioners_proto_enumTypes[1].Descriptor()
}

func (ACMEProvisioner_ChallengeType) Type() protoreflect.EnumType {
	return &file_linkedca_provisioners_proto_enumTypes[1]
}

func (x ACMEProvisioner_ChallengeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACMEProvisioner_ChallengeType.Descriptor instead.
func (ACMEProvisioner_ChallengeType) EnumDescriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{14, 0}
}

type ACMEProvisioner_AttestationFormatType int32

const (
	ACMEProvisioner_NONE  ACMEProvisioner_AttestationFormatType = 0
	ACMEProvisioner_APPLE ACMEProvisioner_AttestationFormatType = 1
	ACMEProvisioner_STEP  ACMEProvisioner_AttestationFormatType = 2
	ACMEProvisioner_TPM   ACMEProvisioner_AttestationFormatType = 3
)

// Enum value maps for ACMEProvisioner_AttestationFormatType.
var (
	ACMEProvisioner_AttestationFormatType_name = map[int32]string{
		0: "NONE",
		1: "APPLE",
		2: "STEP",
		3: "TPM",
	}
	ACMEProvisioner_AttestationFormatType_value = map[string]int32{
		"NONE":  0,
		"APPLE": 1,
		"STEP":  2,
		"TPM":   3,
	}
)

func (x ACMEProvisioner_AttestationFormatType) Enum() *ACMEProvisioner_AttestationFormatType {
	p := new(ACMEProvisioner_AttestationFormatType)
	*p = x
	return p
}

func (x ACMEProvisioner_AttestationFormatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACMEProvisioner_AttestationFormatType) Descriptor() protoreflect.EnumDescriptor {
	return file_linkedca_provisioners_proto_enumTypes[2].Descriptor()
}

func (ACMEProvisioner_AttestationFormatType) Type() protoreflect.EnumType {
	return &file_linkedca_provisioners_proto_enumTypes[2]
}

func (x ACMEProvisioner_AttestationFormatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACMEProvisioner_AttestationFormatType.Descriptor instead.
func (ACMEProvisioner_AttestationFormatType) EnumDescriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{14, 1}
}

type Webhook_Kind int32

const (
	Webhook_NO_KIND       Webhook_Kind = 0
	Webhook_ENRICHING     Webhook_Kind = 1
	Webhook_AUTHORIZING   Webhook_Kind = 2
	Webhook_SCEPCHALLENGE Webhook_Kind = 3
	Webhook_NOTIFYING     Webhook_Kind = 4
)

// Enum value maps for Webhook_Kind.
var (
	Webhook_Kind_name = map[int32]string{
		0: "NO_KIND",
		1: "ENRICHING",
		2: "AUTHORIZING",
		3: "SCEPCHALLENGE",
		4: "NOTIFYING",
	}
	Webhook_Kind_value = map[string]int32{
		"NO_KIND":       0,
		"ENRICHING":     1,
		"AUTHORIZING":   2,
		"SCEPCHALLENGE": 3,
		"NOTIFYING":     4,
	}
)

func (x Webhook_Kind) Enum() *Webhook_Kind {
	p := new(Webhook_Kind)
	*p = x
	return p
}

func (x Webhook_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Webhook_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_linkedca_provisioners_proto_enumTypes[3].Descriptor()
}

func (Webhook_Kind) Type() protoreflect.EnumType {
	return &file_linkedca_provisioners_proto_enumTypes[3]
}

func (x Webhook_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Webhook_Kind.Descriptor instead.
func (Webhook_Kind) EnumDescriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{23, 0}
}

type Webhook_CertType int32

const (
	Webhook_ALL  Webhook_CertType = 0
	Webhook_X509 Webhook_CertType = 1
	Webhook_SSH  Webhook_CertType = 2
)

// Enum value maps for Webhook_CertType.
var (
	Webhook_CertType_name = map[int32]string{
		0: "ALL",
		1: "X509",
		2: "SSH",
	}
	Webhook_CertType_value = map[string]int32{
		"ALL":  0,
		"X509": 1,
		"SSH":  2,
	}
)

func (x Webhook_CertType) Enum() *Webhook_CertType {
	p := new(Webhook_CertType)
	*p = x
	return p
}

func (x Webhook_CertType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Webhook_CertType) Descriptor() protoreflect.EnumDescriptor {
	return file_linkedca_provisioners_proto_enumTypes[4].Descriptor()
}

func (Webhook_CertType) Type() protoreflect.EnumType {
	return &file_linkedca_provisioners_proto_enumTypes[4]
}

func (x Webhook_CertType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Webhook_CertType.Descriptor instead.
func (Webhook_CertType) EnumDescriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{23, 1}
}

type Provisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorityId  string                 `protobuf:"bytes,2,opt,name=authority_id,json=authorityId,proto3" json:"authority_id,omitempty"`
	Type         Provisioner_Type       `protobuf:"varint,3,opt,name=type,proto3,enum=linkedca.Provisioner_Type" json:"type,omitempty"`
	Name         string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Details      *ProvisionerDetails    `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	Claims       *Claims                `protobuf:"bytes,6,opt,name=claims,proto3" json:"claims,omitempty"`
	X509Template *Template              `protobuf:"bytes,7,opt,name=x509_template,json=x509Template,proto3" json:"x509_template,omitempty"`
	SshTemplate  *Template              `protobuf:"bytes,8,opt,name=ssh_template,json=sshTemplate,proto3" json:"ssh_template,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DeletedAt    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Policy       *Policy                `protobuf:"bytes,11,opt,name=policy,proto3" json:"policy,omitempty"`
	Webhooks     []*Webhook             `protobuf:"bytes,12,rep,name=webhooks,proto3" json:"webhooks,omitempty"`
}

func (x *Provisioner) Reset() {
	*x = Provisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provisioner) ProtoMessage() {}

func (x *Provisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provisioner.ProtoReflect.Descriptor instead.
func (*Provisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{0}
}

func (x *Provisioner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Provisioner) GetAuthorityId() string {
	if x != nil {
		return x.AuthorityId
	}
	return ""
}

func (x *Provisioner) GetType() Provisioner_Type {
	if x != nil {
		return x.Type
	}
	return Provisioner_NOOP
}

func (x *Provisioner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provisioner) GetDetails() *ProvisionerDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Provisioner) GetClaims() *Claims {
	if x != nil {
		return x.Claims
	}
	return nil
}

func (x *Provisioner) GetX509Template() *Template {
	if x != nil {
		return x.X509Template
	}
	return nil
}

func (x *Provisioner) GetSshTemplate() *Template {
	if x != nil {
		return x.SshTemplate
	}
	return nil
}

func (x *Provisioner) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Provisioner) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Provisioner) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

func (x *Provisioner) GetWebhooks() []*Webhook {
	if x != nil {
		return x.Webhooks
	}
	return nil
}

type ProvisionerIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type Provisioner_Type `protobuf:"varint,2,opt,name=type,proto3,enum=linkedca.Provisioner_Type" json:"type,omitempty"`
	Name string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProvisionerIdentity) Reset() {
	*x = ProvisionerIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionerIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionerIdentity) ProtoMessage() {}

func (x *ProvisionerIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionerIdentity.ProtoReflect.Descriptor instead.
func (*ProvisionerIdentity) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{1}
}

func (x *ProvisionerIdentity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProvisionerIdentity) GetType() Provisioner_Type {
	if x != nil {
		return x.Type
	}
	return Provisioner_NOOP
}

func (x *ProvisionerIdentity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProvisionerDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*ProvisionerDetails_JWK
	//	*ProvisionerDetails_OIDC
	//	*ProvisionerDetails_GCP
	//	*ProvisionerDetails_AWS
	//	*ProvisionerDetails_Azure
	//	*ProvisionerDetails_ACME
	//	*ProvisionerDetails_X5C
	//	*ProvisionerDetails_K8SSA
	//	*ProvisionerDetails_SSHPOP
	//	*ProvisionerDetails_SCEP
	//	*ProvisionerDetails_Nebula
	Data isProvisionerDetails_Data `protobuf_oneof:"data"`
}

func (x *ProvisionerDetails) Reset() {
	*x = ProvisionerDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionerDetails) ProtoMessage() {}

func (x *ProvisionerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionerDetails.ProtoReflect.Descriptor instead.
func (*ProvisionerDetails) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{2}
}

func (m *ProvisionerDetails) GetData() isProvisionerDetails_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ProvisionerDetails) GetJWK() *JWKProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_JWK); ok {
		return x.JWK
	}
	return nil
}

func (x *ProvisionerDetails) GetOIDC() *OIDCProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_OIDC); ok {
		return x.OIDC
	}
	return nil
}

func (x *ProvisionerDetails) GetGCP() *GCPProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_GCP); ok {
		return x.GCP
	}
	return nil
}

func (x *ProvisionerDetails) GetAWS() *AWSProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_AWS); ok {
		return x.AWS
	}
	return nil
}

func (x *ProvisionerDetails) GetAzure() *AzureProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_Azure); ok {
		return x.Azure
	}
	return nil
}

func (x *ProvisionerDetails) GetACME() *ACMEProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_ACME); ok {
		return x.ACME
	}
	return nil
}

func (x *ProvisionerDetails) GetX5C() *X5CProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_X5C); ok {
		return x.X5C
	}
	return nil
}

func (x *ProvisionerDetails) GetK8SSA() *K8SSAProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_K8SSA); ok {
		return x.K8SSA
	}
	return nil
}

func (x *ProvisionerDetails) GetSSHPOP() *SSHPOPProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_SSHPOP); ok {
		return x.SSHPOP
	}
	return nil
}

func (x *ProvisionerDetails) GetSCEP() *SCEPProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_SCEP); ok {
		return x.SCEP
	}
	return nil
}

func (x *ProvisionerDetails) GetNebula() *NebulaProvisioner {
	if x, ok := x.GetData().(*ProvisionerDetails_Nebula); ok {
		return x.Nebula
	}
	return nil
}

type isProvisionerDetails_Data interface {
	isProvisionerDetails_Data()
}

type ProvisionerDetails_JWK struct {
	JWK *JWKProvisioner `protobuf:"bytes,20,opt,name=JWK,proto3,oneof"`
}

type ProvisionerDetails_OIDC struct {
	OIDC *OIDCProvisioner `protobuf:"bytes,21,opt,name=OIDC,proto3,oneof"`
}

type ProvisionerDetails_GCP struct {
	GCP *GCPProvisioner `protobuf:"bytes,22,opt,name=GCP,proto3,oneof"`
}

type ProvisionerDetails_AWS struct {
	AWS *AWSProvisioner `protobuf:"bytes,23,opt,name=AWS,proto3,oneof"`
}

type ProvisionerDetails_Azure struct {
	Azure *AzureProvisioner `protobuf:"bytes,24,opt,name=Azure,proto3,oneof"`
}

type ProvisionerDetails_ACME struct {
	ACME *ACMEProvisioner `protobuf:"bytes,25,opt,name=ACME,proto3,oneof"`
}

type ProvisionerDetails_X5C struct {
	X5C *X5CProvisioner `protobuf:"bytes,26,opt,name=X5C,proto3,oneof"`
}

type ProvisionerDetails_K8SSA struct {
	K8SSA *K8SSAProvisioner `protobuf:"bytes,27,opt,name=K8sSA,proto3,oneof"`
}

type ProvisionerDetails_SSHPOP struct {
	SSHPOP *SSHPOPProvisioner `protobuf:"bytes,28,opt,name=SSHPOP,proto3,oneof"`
}

type ProvisionerDetails_SCEP struct {
	SCEP *SCEPProvisioner `protobuf:"bytes,29,opt,name=SCEP,proto3,oneof"`
}

type ProvisionerDetails_Nebula struct {
	Nebula *NebulaProvisioner `protobuf:"bytes,30,opt,name=Nebula,proto3,oneof"`
}

func (*ProvisionerDetails_JWK) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_OIDC) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_GCP) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_AWS) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_Azure) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_ACME) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_X5C) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_K8SSA) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_SSHPOP) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_SCEP) isProvisionerDetails_Data() {}

func (*ProvisionerDetails_Nebula) isProvisionerDetails_Data() {}

type ProvisionerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provisioners []*Provisioner `protobuf:"bytes,1,rep,name=provisioners,proto3" json:"provisioners,omitempty"`
}

func (x *ProvisionerList) Reset() {
	*x = ProvisionerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionerList) ProtoMessage() {}

func (x *ProvisionerList) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionerList.ProtoReflect.Descriptor instead.
func (*ProvisionerList) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{3}
}

func (x *ProvisionerList) GetProvisioners() []*Provisioner {
	if x != nil {
		return x.Provisioners
	}
	return nil
}

type Claims struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X509                       *X509Claims `protobuf:"bytes,1,opt,name=x509,proto3" json:"x509,omitempty"`
	Ssh                        *SSHClaims  `protobuf:"bytes,2,opt,name=ssh,proto3" json:"ssh,omitempty"`
	DisableRenewal             bool        `protobuf:"varint,3,opt,name=disable_renewal,json=disableRenewal,proto3" json:"disable_renewal,omitempty"`
	AllowRenewalAfterExpiry    bool        `protobuf:"varint,4,opt,name=allow_renewal_after_expiry,json=allowRenewalAfterExpiry,proto3" json:"allow_renewal_after_expiry,omitempty"`
	DisableSmallstepExtensions bool        `protobuf:"varint,5,opt,name=disable_smallstep_extensions,json=disableSmallstepExtensions,proto3" json:"disable_smallstep_extensions,omitempty"`
}

func (x *Claims) Reset() {
	*x = Claims{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Claims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Claims) ProtoMessage() {}

func (x *Claims) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Claims.ProtoReflect.Descriptor instead.
func (*Claims) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{4}
}

func (x *Claims) GetX509() *X509Claims {
	if x != nil {
		return x.X509
	}
	return nil
}

func (x *Claims) GetSsh() *SSHClaims {
	if x != nil {
		return x.Ssh
	}
	return nil
}

func (x *Claims) GetDisableRenewal() bool {
	if x != nil {
		return x.DisableRenewal
	}
	return false
}

func (x *Claims) GetAllowRenewalAfterExpiry() bool {
	if x != nil {
		return x.AllowRenewalAfterExpiry
	}
	return false
}

func (x *Claims) GetDisableSmallstepExtensions() bool {
	if x != nil {
		return x.DisableSmallstepExtensions
	}
	return false
}

type X509Claims struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   bool       `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Durations *Durations `protobuf:"bytes,2,opt,name=durations,proto3" json:"durations,omitempty"`
}

func (x *X509Claims) Reset() {
	*x = X509Claims{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *X509Claims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X509Claims) ProtoMessage() {}

func (x *X509Claims) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X509Claims.ProtoReflect.Descriptor instead.
func (*X509Claims) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{5}
}

func (x *X509Claims) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *X509Claims) GetDurations() *Durations {
	if x != nil {
		return x.Durations
	}
	return nil
}

type SSHClaims struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled       bool       `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	UserDurations *Durations `protobuf:"bytes,2,opt,name=user_durations,json=userDurations,proto3" json:"user_durations,omitempty"`
	HostDurations *Durations `protobuf:"bytes,3,opt,name=host_durations,json=hostDurations,proto3" json:"host_durations,omitempty"`
}

func (x *SSHClaims) Reset() {
	*x = SSHClaims{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHClaims) ProtoMessage() {}

func (x *SSHClaims) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHClaims.ProtoReflect.Descriptor instead.
func (*SSHClaims) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{6}
}

func (x *SSHClaims) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *SSHClaims) GetUserDurations() *Durations {
	if x != nil {
		return x.UserDurations
	}
	return nil
}

func (x *SSHClaims) GetHostDurations() *Durations {
	if x != nil {
		return x.HostDurations
	}
	return nil
}

type Durations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default string `protobuf:"bytes,1,opt,name=default,proto3" json:"default,omitempty"`
	Min     string `protobuf:"bytes,2,opt,name=min,proto3" json:"min,omitempty"`
	Max     string `protobuf:"bytes,3,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *Durations) Reset() {
	*x = Durations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Durations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Durations) ProtoMessage() {}

func (x *Durations) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Durations.ProtoReflect.Descriptor instead.
func (*Durations) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{7}
}

func (x *Durations) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *Durations) GetMin() string {
	if x != nil {
		return x.Min
	}
	return ""
}

func (x *Durations) GetMax() string {
	if x != nil {
		return x.Max
	}
	return ""
}

type Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Template []byte `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Data     []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Template) Reset() {
	*x = Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{8}
}

func (x *Template) GetTemplate() []byte {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *Template) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type JWKProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey           []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	EncryptedPrivateKey []byte `protobuf:"bytes,2,opt,name=encrypted_private_key,json=encryptedPrivateKey,proto3" json:"encrypted_private_key,omitempty"`
}

func (x *JWKProvisioner) Reset() {
	*x = JWKProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWKProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWKProvisioner) ProtoMessage() {}

func (x *JWKProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWKProvisioner.ProtoReflect.Descriptor instead.
func (*JWKProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{9}
}

func (x *JWKProvisioner) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *JWKProvisioner) GetEncryptedPrivateKey() []byte {
	if x != nil {
		return x.EncryptedPrivateKey
	}
	return nil
}

type OIDCProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId              string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret          string   `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ConfigurationEndpoint string   `protobuf:"bytes,3,opt,name=configuration_endpoint,json=configurationEndpoint,proto3" json:"configuration_endpoint,omitempty"`
	Admins                []string `protobuf:"bytes,4,rep,name=admins,proto3" json:"admins,omitempty"`
	Domains               []string `protobuf:"bytes,5,rep,name=domains,proto3" json:"domains,omitempty"`
	Groups                []string `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups,omitempty"`
	ListenAddress         string   `protobuf:"bytes,7,opt,name=listen_address,json=listenAddress,proto3" json:"listen_address,omitempty"`
	TenantId              string   `protobuf:"bytes,8,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *OIDCProvisioner) Reset() {
	*x = OIDCProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDCProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCProvisioner) ProtoMessage() {}

func (x *OIDCProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCProvisioner.ProtoReflect.Descriptor instead.
func (*OIDCProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{10}
}

func (x *OIDCProvisioner) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OIDCProvisioner) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OIDCProvisioner) GetConfigurationEndpoint() string {
	if x != nil {
		return x.ConfigurationEndpoint
	}
	return ""
}

func (x *OIDCProvisioner) GetAdmins() []string {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *OIDCProvisioner) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *OIDCProvisioner) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *OIDCProvisioner) GetListenAddress() string {
	if x != nil {
		return x.ListenAddress
	}
	return ""
}

func (x *OIDCProvisioner) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GCPProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceAccounts        []string `protobuf:"bytes,1,rep,name=service_accounts,json=serviceAccounts,proto3" json:"service_accounts,omitempty"`
	ProjectIds             []string `protobuf:"bytes,2,rep,name=project_ids,json=projectIds,proto3" json:"project_ids,omitempty"`
	DisableCustomSans      bool     `protobuf:"varint,3,opt,name=disable_custom_sans,json=disableCustomSans,proto3" json:"disable_custom_sans,omitempty"`
	DisableTrustOnFirstUse bool     `protobuf:"varint,4,opt,name=disable_trust_on_first_use,json=disableTrustOnFirstUse,proto3" json:"disable_trust_on_first_use,omitempty"`
	InstanceAge            string   `protobuf:"bytes,5,opt,name=instance_age,json=instanceAge,proto3" json:"instance_age,omitempty"`
}

func (x *GCPProvisioner) Reset() {
	*x = GCPProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCPProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCPProvisioner) ProtoMessage() {}

func (x *GCPProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCPProvisioner.ProtoReflect.Descriptor instead.
func (*GCPProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{11}
}

func (x *GCPProvisioner) GetServiceAccounts() []string {
	if x != nil {
		return x.ServiceAccounts
	}
	return nil
}

func (x *GCPProvisioner) GetProjectIds() []string {
	if x != nil {
		return x.ProjectIds
	}
	return nil
}

func (x *GCPProvisioner) GetDisableCustomSans() bool {
	if x != nil {
		return x.DisableCustomSans
	}
	return false
}

func (x *GCPProvisioner) GetDisableTrustOnFirstUse() bool {
	if x != nil {
		return x.DisableTrustOnFirstUse
	}
	return false
}

func (x *GCPProvisioner) GetInstanceAge() string {
	if x != nil {
		return x.InstanceAge
	}
	return ""
}

type AWSProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts               []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	DisableCustomSans      bool     `protobuf:"varint,2,opt,name=disable_custom_sans,json=disableCustomSans,proto3" json:"disable_custom_sans,omitempty"`
	DisableTrustOnFirstUse bool     `protobuf:"varint,3,opt,name=disable_trust_on_first_use,json=disableTrustOnFirstUse,proto3" json:"disable_trust_on_first_use,omitempty"`
	InstanceAge            string   `protobuf:"bytes,4,opt,name=instance_age,json=instanceAge,proto3" json:"instance_age,omitempty"`
}

func (x *AWSProvisioner) Reset() {
	*x = AWSProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSProvisioner) ProtoMessage() {}

func (x *AWSProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSProvisioner.ProtoReflect.Descriptor instead.
func (*AWSProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{12}
}

func (x *AWSProvisioner) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *AWSProvisioner) GetDisableCustomSans() bool {
	if x != nil {
		return x.DisableCustomSans
	}
	return false
}

func (x *AWSProvisioner) GetDisableTrustOnFirstUse() bool {
	if x != nil {
		return x.DisableTrustOnFirstUse
	}
	return false
}

func (x *AWSProvisioner) GetInstanceAge() string {
	if x != nil {
		return x.InstanceAge
	}
	return ""
}

type AzureProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId               string   `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ResourceGroups         []string `protobuf:"bytes,2,rep,name=resource_groups,json=resourceGroups,proto3" json:"resource_groups,omitempty"`
	Audience               string   `protobuf:"bytes,3,opt,name=audience,proto3" json:"audience,omitempty"`
	DisableCustomSans      bool     `protobuf:"varint,4,opt,name=disable_custom_sans,json=disableCustomSans,proto3" json:"disable_custom_sans,omitempty"`
	DisableTrustOnFirstUse bool     `protobuf:"varint,5,opt,name=disable_trust_on_first_use,json=disableTrustOnFirstUse,proto3" json:"disable_trust_on_first_use,omitempty"`
	SubscriptionIds        []string `protobuf:"bytes,6,rep,name=subscription_ids,json=subscriptionIds,proto3" json:"subscription_ids,omitempty"`
	ObjectIds              []string `protobuf:"bytes,7,rep,name=object_ids,json=objectIds,proto3" json:"object_ids,omitempty"`
}

func (x *AzureProvisioner) Reset() {
	*x = AzureProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureProvisioner) ProtoMessage() {}

func (x *AzureProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureProvisioner.ProtoReflect.Descriptor instead.
func (*AzureProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{13}
}

func (x *AzureProvisioner) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *AzureProvisioner) GetResourceGroups() []string {
	if x != nil {
		return x.ResourceGroups
	}
	return nil
}

func (x *AzureProvisioner) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *AzureProvisioner) GetDisableCustomSans() bool {
	if x != nil {
		return x.DisableCustomSans
	}
	return false
}

func (x *AzureProvisioner) GetDisableTrustOnFirstUse() bool {
	if x != nil {
		return x.DisableTrustOnFirstUse
	}
	return false
}

func (x *AzureProvisioner) GetSubscriptionIds() []string {
	if x != nil {
		return x.SubscriptionIds
	}
	return nil
}

func (x *AzureProvisioner) GetObjectIds() []string {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type ACMEProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceCn            bool                                    `protobuf:"varint,1,opt,name=force_cn,json=forceCn,proto3" json:"force_cn,omitempty"`
	RequireEab         bool                                    `protobuf:"varint,2,opt,name=require_eab,json=requireEab,proto3" json:"require_eab,omitempty"`
	Challenges         []ACMEProvisioner_ChallengeType         `protobuf:"varint,3,rep,packed,name=challenges,proto3,enum=linkedca.ACMEProvisioner_ChallengeType" json:"challenges,omitempty"`
	AttestationFormats []ACMEProvisioner_AttestationFormatType `protobuf:"varint,4,rep,packed,name=attestation_formats,json=attestationFormats,proto3,enum=linkedca.ACMEProvisioner_AttestationFormatType" json:"attestation_formats,omitempty"`
	AttestationRoots   [][]byte                                `protobuf:"bytes,5,rep,name=attestation_roots,json=attestationRoots,proto3" json:"attestation_roots,omitempty"`
	TermsOfService     string                                  `protobuf:"bytes,6,opt,name=terms_of_service,json=termsOfService,proto3" json:"terms_of_service,omitempty"`
	Website            string                                  `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
	CaaIdentities      []string                                `protobuf:"bytes,8,rep,name=caa_identities,json=caaIdentities,proto3" json:"caa_identities,omitempty"`
}

func (x *ACMEProvisioner) Reset() {
	*x = ACMEProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ACMEProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ACMEProvisioner) ProtoMessage() {}

func (x *ACMEProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ACMEProvisioner.ProtoReflect.Descriptor instead.
func (*ACMEProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{14}
}

func (x *ACMEProvisioner) GetForceCn() bool {
	if x != nil {
		return x.ForceCn
	}
	return false
}

func (x *ACMEProvisioner) GetRequireEab() bool {
	if x != nil {
		return x.RequireEab
	}
	return false
}

func (x *ACMEProvisioner) GetChallenges() []ACMEProvisioner_ChallengeType {
	if x != nil {
		return x.Challenges
	}
	return nil
}

func (x *ACMEProvisioner) GetAttestationFormats() []ACMEProvisioner_AttestationFormatType {
	if x != nil {
		return x.AttestationFormats
	}
	return nil
}

func (x *ACMEProvisioner) GetAttestationRoots() [][]byte {
	if x != nil {
		return x.AttestationRoots
	}
	return nil
}

func (x *ACMEProvisioner) GetTermsOfService() string {
	if x != nil {
		return x.TermsOfService
	}
	return ""
}

func (x *ACMEProvisioner) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *ACMEProvisioner) GetCaaIdentities() []string {
	if x != nil {
		return x.CaaIdentities
	}
	return nil
}

type X5CProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots [][]byte `protobuf:"bytes,1,rep,name=roots,proto3" json:"roots,omitempty"`
}

func (x *X5CProvisioner) Reset() {
	*x = X5CProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *X5CProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*X5CProvisioner) ProtoMessage() {}

func (x *X5CProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use X5CProvisioner.ProtoReflect.Descriptor instead.
func (*X5CProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{15}
}

func (x *X5CProvisioner) GetRoots() [][]byte {
	if x != nil {
		return x.Roots
	}
	return nil
}

type K8SSAProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeys [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
}

func (x *K8SSAProvisioner) Reset() {
	*x = K8SSAProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *K8SSAProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*K8SSAProvisioner) ProtoMessage() {}

func (x *K8SSAProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use K8SSAProvisioner.ProtoReflect.Descriptor instead.
func (*K8SSAProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{16}
}

func (x *K8SSAProvisioner) GetPublicKeys() [][]byte {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

type SSHPOPProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SSHPOPProvisioner) Reset() {
	*x = SSHPOPProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHPOPProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHPOPProvisioner) ProtoMessage() {}

func (x *SSHPOPProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHPOPProvisioner.ProtoReflect.Descriptor instead.
func (*SSHPOPProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{17}
}

type SCEPDecrypter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate []byte `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
	Key         []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	KeyUri      string `protobuf:"bytes,3,opt,name=key_uri,json=keyUri,proto3" json:"key_uri,omitempty"`
	KeyPassword []byte `protobuf:"bytes,4,opt,name=key_password,json=keyPassword,proto3" json:"key_password,omitempty"`
}

func (x *SCEPDecrypter) Reset() {
	*x = SCEPDecrypter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCEPDecrypter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCEPDecrypter) ProtoMessage() {}

func (x *SCEPDecrypter) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCEPDecrypter.ProtoReflect.Descriptor instead.
func (*SCEPDecrypter) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{18}
}

func (x *SCEPDecrypter) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *SCEPDecrypter) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SCEPDecrypter) GetKeyUri() string {
	if x != nil {
		return x.KeyUri
	}
	return ""
}

func (x *SCEPDecrypter) GetKeyPassword() []byte {
	if x != nil {
		return x.KeyPassword
	}
	return nil
}

type SCEPProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForceCn                       bool           `protobuf:"varint,1,opt,name=force_cn,json=forceCn,proto3" json:"force_cn,omitempty"`
	Challenge                     string         `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Capabilities                  []string       `protobuf:"bytes,3,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	MinimumPublicKeyLength        int32          `protobuf:"varint,4,opt,name=minimum_public_key_length,json=minimumPublicKeyLength,proto3" json:"minimum_public_key_length,omitempty"`
	IncludeRoot                   bool           `protobuf:"varint,5,opt,name=include_root,json=includeRoot,proto3" json:"include_root,omitempty"`
	EncryptionAlgorithmIdentifier int32          `protobuf:"varint,6,opt,name=encryption_algorithm_identifier,json=encryptionAlgorithmIdentifier,proto3" json:"encryption_algorithm_identifier,omitempty"`
	Decrypter                     *SCEPDecrypter `protobuf:"bytes,7,opt,name=decrypter,proto3" json:"decrypter,omitempty"`
	ExcludeIntermediate           bool           `protobuf:"varint,8,opt,name=exclude_intermediate,json=excludeIntermediate,proto3" json:"exclude_intermediate,omitempty"`
}

func (x *SCEPProvisioner) Reset() {
	*x = SCEPProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SCEPProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCEPProvisioner) ProtoMessage() {}

func (x *SCEPProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCEPProvisioner.ProtoReflect.Descriptor instead.
func (*SCEPProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{19}
}

func (x *SCEPProvisioner) GetForceCn() bool {
	if x != nil {
		return x.ForceCn
	}
	return false
}

func (x *SCEPProvisioner) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *SCEPProvisioner) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *SCEPProvisioner) GetMinimumPublicKeyLength() int32 {
	if x != nil {
		return x.MinimumPublicKeyLength
	}
	return 0
}

func (x *SCEPProvisioner) GetIncludeRoot() bool {
	if x != nil {
		return x.IncludeRoot
	}
	return false
}

func (x *SCEPProvisioner) GetEncryptionAlgorithmIdentifier() int32 {
	if x != nil {
		return x.EncryptionAlgorithmIdentifier
	}
	return 0
}

func (x *SCEPProvisioner) GetDecrypter() *SCEPDecrypter {
	if x != nil {
		return x.Decrypter
	}
	return nil
}

func (x *SCEPProvisioner) GetExcludeIntermediate() bool {
	if x != nil {
		return x.ExcludeIntermediate
	}
	return false
}

type NebulaProvisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots [][]byte `protobuf:"bytes,1,rep,name=roots,proto3" json:"roots,omitempty"`
}

func (x *NebulaProvisioner) Reset() {
	*x = NebulaProvisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NebulaProvisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NebulaProvisioner) ProtoMessage() {}

func (x *NebulaProvisioner) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NebulaProvisioner.ProtoReflect.Descriptor instead.
func (*NebulaProvisioner) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{20}
}

func (x *NebulaProvisioner) GetRoots() [][]byte {
	if x != nil {
		return x.Roots
	}
	return nil
}

type BasicAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *BasicAuth) Reset() {
	*x = BasicAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicAuth) ProtoMessage() {}

func (x *BasicAuth) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicAuth.ProtoReflect.Descriptor instead.
func (*BasicAuth) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{21}
}

func (x *BasicAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BasicAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type BearerToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BearerToken string `protobuf:"bytes,1,opt,name=bearer_token,json=bearerToken,proto3" json:"bearer_token,omitempty"`
}

func (x *BearerToken) Reset() {
	*x = BearerToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BearerToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BearerToken) ProtoMessage() {}

func (x *BearerToken) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BearerToken.ProtoReflect.Descriptor instead.
func (*BearerToken) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{22}
}

func (x *BearerToken) GetBearerToken() string {
	if x != nil {
		return x.BearerToken
	}
	return ""
}

type Webhook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id     string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Url    string       `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Kind   Webhook_Kind `protobuf:"varint,4,opt,name=kind,proto3,enum=linkedca.Webhook_Kind" json:"kind,omitempty"`
	Secret string       `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	// Types that are assignable to Auth:
	//
	//	*Webhook_BearerToken
	//	*Webhook_BasicAuth
	Auth                 isWebhook_Auth   `protobuf_oneof:"auth"`
	DisableTlsClientAuth bool             `protobuf:"varint,8,opt,name=disable_tls_client_auth,json=disableTlsClientAuth,proto3" json:"disable_tls_client_auth,omitempty"`
	CertType             Webhook_CertType `protobuf:"varint,9,opt,name=cert_type,json=certType,proto3,enum=linkedca.Webhook_CertType" json:"cert_type,omitempty"`
}

func (x *Webhook) Reset() {
	*x = Webhook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_linkedca_provisioners_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Webhook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Webhook) ProtoMessage() {}

func (x *Webhook) ProtoReflect() protoreflect.Message {
	mi := &file_linkedca_provisioners_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Webhook.ProtoReflect.Descriptor instead.
func (*Webhook) Descriptor() ([]byte, []int) {
	return file_linkedca_provisioners_proto_rawDescGZIP(), []int{23}
}

func (x *Webhook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Webhook) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Webhook) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Webhook) GetKind() Webhook_Kind {
	if x != nil {
		return x.Kind
	}
	return Webhook_NO_KIND
}

func (x *Webhook) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (m *Webhook) GetAuth() isWebhook_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (x *Webhook) GetBearerToken() *BearerToken {
	if x, ok := x.GetAuth().(*Webhook_BearerToken); ok {
		return x.BearerToken
	}
	return nil
}

func (x *Webhook) GetBasicAuth() *BasicAuth {
	if x, ok := x.GetAuth().(*Webhook_BasicAuth); ok {
		return x.BasicAuth
	}
	return nil
}

func (x *Webhook) GetDisableTlsClientAuth() bool {
	if x != nil {
		return x.DisableTlsClientAuth
	}
	return false
}

func (x *Webhook) GetCertType() Webhook_CertType {
	if x != nil {
		return x.CertType
	}
	return Webhook_ALL
}

type isWebhook_Auth interface {
	isWebhook_Auth()
}

type Webhook_BearerToken struct {
	BearerToken *BearerToken `protobuf:"bytes,6,opt,name=bearer_token,json=bearerToken,proto3,oneof"`
}

type Webhook_BasicAuth struct {
	BasicAuth *BasicAuth `protobuf:"bytes,7,opt,name=basic_auth,json=basicAuth,proto3,oneof"`
}

func (*Webhook_BearerToken) isWebhook_Auth() {}

func (*Webhook_BasicAuth) isWebhook_Auth() {}

var File_linkedca_provisioners_proto protoreflect.FileDescriptor

var file_linkedca_provisioners_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x63, 0x61, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa8, 0x05, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x63, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28,
	0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73,
	0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x37, 0x0a, 0x0d, 0x78, 0x35, 0x30, 0x39,
	0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x0c, 0x78, 0x35, 0x30, 0x39, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x0c, 0x73, 0x73, 0x68, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64,
	0x63, 0x61, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x73, 0x73, 0x68,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x77,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4a, 0x57,
	0x4b, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x49, 0x44, 0x43, 0x10, 0x02, 0x12, 0x07, 0x0a,
	0x03, 0x47, 0x43, 0x50, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x57, 0x53, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x5a, 0x55, 0x52, 0x45, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x43,
	0x4d, 0x45, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x35, 0x43, 0x10, 0x07, 0x12, 0x09, 0x0a,
	0x05, 0x4b, 0x38, 0x53, 0x53, 0x41, 0x10, 0x08, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x53, 0x48, 0x50,
	0x4f, 0x50, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x43, 0x45, 0x50, 0x10, 0x0a, 0x12, 0x0a,
	0x0a, 0x06, 0x4e, 0x45, 0x42, 0x55, 0x4c, 0x41, 0x10, 0x0b, 0x22, 0x69, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbd, 0x04, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x03,
	0x4a, 0x57, 0x4b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x63, 0x61, 0x2e, 0x4a, 0x57, 0x4b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x03, 0x4a, 0x57, 0x4b, 0x12, 0x2f, 0x0a, 0x04, 0x4f, 0x49,
	0x44, 0x43, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x63, 0x61, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x4f, 0x49, 0x44, 0x43, 0x12, 0x2c, 0x0a, 0x03, 0x47,
	0x43, 0x50, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x63, 0x61, 0x2e, 0x47, 0x43, 0x50, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x03, 0x47, 0x43, 0x50, 0x12, 0x2c, 0x0a, 0x03, 0x41, 0x57, 0x53,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63,
	0x61, 0x2e, 0x41, 0x57, 0x53, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x03, 0x41, 0x57, 0x53, 0x12, 0x32, 0x0a, 0x05, 0x41, 0x7a, 0x75, 0x72, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63,
	0x61, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x41,
	0x43, 0x4d, 0x45, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x63, 0x61, 0x2e, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x41, 0x43, 0x4d, 0x45, 0x12, 0x2c, 0x0a, 0x03,
	0x58, 0x35, 0x43, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x63, 0x61, 0x2e, 0x58, 0x35, 0x43, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x03, 0x58, 0x35, 0x43, 0x12, 0x32, 0x0a, 0x05, 0x4b, 0x38,
	0x73, 0x53, 0x41, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x63, 0x61, 0x2e, 0x4b, 0x38, 0x73, 0x53, 0x41, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x05, 0x4b, 0x38, 0x73, 0x53, 0x41, 0x12, 0x35,
	0x0a, 0x06, 0x53, 0x53, 0x48, 0x50, 0x4f, 0x50, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x53, 0x53, 0x48, 0x50, 0x4f, 0x50,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x53,
	0x53, 0x48, 0x50, 0x4f, 0x50, 0x12, 0x2f, 0x0a, 0x04, 0x53, 0x43, 0x45, 0x50, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x53,
	0x43, 0x45, 0x50, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x04, 0x53, 0x43, 0x45, 0x50, 0x12, 0x35, 0x0a, 0x06, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63,
	0x61, 0x2e, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x4e, 0x65, 0x62, 0x75, 0x6c, 0x61, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x06, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x28,
	0x0a, 0x04, 0x78, 0x35, 0x30, 0x39, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x58, 0x35, 0x30, 0x39, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x52, 0x04, 0x78, 0x35, 0x30, 0x39, 0x12, 0x25, 0x0a, 0x03, 0x73, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61,
	0x2e, 0x53, 0x53, 0x48, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x52, 0x03, 0x73, 0x73, 0x68, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x6e, 0x65, 0x77,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x5f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x41, 0x66, 0x74, 0x65, 0x72, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x1c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x6d, 0x61, 0x6c, 0x6c, 0x73, 0x74, 0x65, 0x70, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x59, 0x0a, 0x0a, 0x58, 0x35, 0x30, 0x39, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x31, 0x0a, 0x09, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x09, 0x53, 0x53, 0x48, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x49, 0x0a, 0x09, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x3a, 0x0a,
	0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x0e, 0x4a, 0x57, 0x4b,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x98,
	0x02, 0x0a, 0x0f, 0x4f, 0x49, 0x44, 0x43, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x0e, 0x47, 0x43,
	0x50, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x61, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x53, 0x61, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x46, 0x69, 0x72, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x41, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x41, 0x57, 0x53, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x61, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x53, 0x61, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x4f, 0x6e, 0x46, 0x69, 0x72, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x67, 0x65, 0x22, 0xaa, 0x02, 0x0a, 0x10, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x73,
	0x61, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x53, 0x61, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x1a,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x5f, 0x6f, 0x6e,
	0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x75, 0x73, 0x74, 0x4f, 0x6e,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x73, 0x22, 0xaf, 0x04, 0x0a, 0x0f, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x5f,
	0x63, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x65, 0x61, 0x62,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x45,
	0x61, 0x62, 0x12, 0x47, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63,
	0x61, 0x2e, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x13, 0x61,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x63, 0x61, 0x2e, 0x41, 0x43, 0x4d, 0x45, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x10, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65,
	0x72, 0x6d, 0x73, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x66, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x61, 0x61, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x61, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x54, 0x54, 0x50, 0x5f, 0x30, 0x31, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x4e, 0x53, 0x5f, 0x30, 0x31, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b,
	0x54, 0x4c, 0x53, 0x5f, 0x41, 0x4c, 0x50, 0x4e, 0x5f, 0x30, 0x31, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x30,
	0x31, 0x10, 0x04, 0x22, 0x3f, 0x0a, 0x15, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x45, 0x50, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x54,
	0x50, 0x4d, 0x10, 0x03, 0x22, 0x26, 0x0a, 0x0e, 0x58, 0x35, 0x43, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x10,
	0x4b, 0x38, 0x73, 0x53, 0x41, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x53, 0x48, 0x50, 0x4f, 0x50, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x22, 0x7f, 0x0a, 0x0d, 0x53, 0x43, 0x45, 0x50, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x65,
	0x79, 0x55, 0x72, 0x69, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x0f, 0x53, 0x43, 0x45, 0x50,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x43, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x75, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x46, 0x0a, 0x1f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x35,
	0x0a, 0x09, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x53, 0x43, 0x45,
	0x50, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x72, 0x52, 0x09, 0x64, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x14, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x4e, 0x65, 0x62, 0x75,
	0x6c, 0x61, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x05, 0x72, 0x6f,
	0x6f, 0x74, 0x73, 0x22, 0x43, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x30, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x72, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xec, 0x03, 0x0a, 0x07, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63,
	0x61, 0x2e, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x00, 0x52,
	0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6c,
	0x73, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6c, 0x73, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e,
	0x43, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x55, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f,
	0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4e, 0x52, 0x49, 0x43,
	0x48, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52,
	0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x43, 0x45, 0x50, 0x43,
	0x48, 0x41, 0x4c, 0x4c, 0x45, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x22, 0x26, 0x0a, 0x08, 0x43, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x58, 0x35, 0x30, 0x39, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x48, 0x10,
	0x02, 0x42, 0x06, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x42, 0x15, 0x5a, 0x13, 0x67, 0x6f, 0x2e,
	0x73, 0x74, 0x65, 0x70, 0x2e, 0x73, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x63, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_linkedca_provisioners_proto_rawDescOnce sync.Once
	file_linkedca_provisioners_proto_rawDescData = file_linkedca_provisioners_proto_rawDesc
)

func file_linkedca_provisioners_proto_rawDescGZIP() []byte {
	file_linkedca_provisioners_proto_rawDescOnce.Do(func() {
		file_linkedca_provisioners_proto_rawDescData = protoimpl.X.CompressGZIP(file_linkedca_provisioners_proto_rawDescData)
	})
	return file_linkedca_provisioners_proto_rawDescData
}

var file_linkedca_provisioners_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_linkedca_provisioners_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_linkedca_provisioners_proto_goTypes = []interface{}{
	(Provisioner_Type)(0),                      // 0: linkedca.Provisioner.Type
	(ACMEProvisioner_ChallengeType)(0),         // 1: linkedca.ACMEProvisioner.ChallengeType
	(ACMEProvisioner_AttestationFormatType)(0), // 2: linkedca.ACMEProvisioner.AttestationFormatType
	(Webhook_Kind)(0),                          // 3: linkedca.Webhook.Kind
	(Webhook_CertType)(0),                      // 4: linkedca.Webhook.CertType
	(*Provisioner)(nil),                        // 5: linkedca.Provisioner
	(*ProvisionerIdentity)(nil),                // 6: linkedca.ProvisionerIdentity
	(*ProvisionerDetails)(nil),                 // 7: linkedca.ProvisionerDetails
	(*ProvisionerList)(nil),                    // 8: linkedca.ProvisionerList
	(*Claims)(nil),                             // 9: linkedca.Claims
	(*X509Claims)(nil),                         // 10: linkedca.X509Claims
	(*SSHClaims)(nil),                          // 11: linkedca.SSHClaims
	(*Durations)(nil),                          // 12: linkedca.Durations
	(*Template)(nil),                           // 13: linkedca.Template
	(*JWKProvisioner)(nil),                     // 14: linkedca.JWKProvisioner
	(*OIDCProvisioner)(nil),                    // 15: linkedca.OIDCProvisioner
	(*GCPProvisioner)(nil),                     // 16: linkedca.GCPProvisioner
	(*AWSProvisioner)(nil),                     // 17: linkedca.AWSProvisioner
	(*AzureProvisioner)(nil),                   // 18: linkedca.AzureProvisioner
	(*ACMEProvisioner)(nil),                    // 19: linkedca.ACMEProvisioner
	(*X5CProvisioner)(nil),                     // 20: linkedca.X5CProvisioner
	(*K8SSAProvisioner)(nil),                   // 21: linkedca.K8sSAProvisioner
	(*SSHPOPProvisioner)(nil),                  // 22: linkedca.SSHPOPProvisioner
	(*SCEPDecrypter)(nil),                      // 23: linkedca.SCEPDecrypter
	(*SCEPProvisioner)(nil),                    // 24: linkedca.SCEPProvisioner
	(*NebulaProvisioner)(nil),                  // 25: linkedca.NebulaProvisioner
	(*BasicAuth)(nil),                          // 26: linkedca.BasicAuth
	(*BearerToken)(nil),                        // 27: linkedca.BearerToken
	(*Webhook)(nil),                            // 28: linkedca.Webhook
	(*timestamppb.Timestamp)(nil),              // 29: google.protobuf.Timestamp
	(*Policy)(nil),                             // 30: linkedca.Policy
}
var file_linkedca_provisioners_proto_depIdxs = []int32{
	0,  // 0: linkedca.Provisioner.type:type_name -> linkedca.Provisioner.Type
	7,  // 1: linkedca.Provisioner.details:type_name -> linkedca.ProvisionerDetails
	9,  // 2: linkedca.Provisioner.claims:type_name -> linkedca.Claims
	13, // 3: linkedca.Provisioner.x509_template:type_name -> linkedca.Template
	13, // 4: linkedca.Provisioner.ssh_template:type_name -> linkedca.Template
	29, // 5: linkedca.Provisioner.created_at:type_name -> google.protobuf.Timestamp
	29, // 6: linkedca.Provisioner.deleted_at:type_name -> google.protobuf.Timestamp
	30, // 7: linkedca.Provisioner.policy:type_name -> linkedca.Policy
	28, // 8: linkedca.Provisioner.webhooks:type_name -> linkedca.Webhook
	0,  // 9: linkedca.ProvisionerIdentity.type:type_name -> linkedca.Provisioner.Type
	14, // 10: linkedca.ProvisionerDetails.JWK:type_name -> linkedca.JWKProvisioner
	15, // 11: linkedca.ProvisionerDetails.OIDC:type_name -> linkedca.OIDCProvisioner
	16, // 12: linkedca.ProvisionerDetails.GCP:type_name -> linkedca.GCPProvisioner
	17, // 13: linkedca.ProvisionerDetails.AWS:type_name -> linkedca.AWSProvisioner
	18, // 14: linkedca.ProvisionerDetails.Azure:type_name -> linkedca.AzureProvisioner
	19, // 15: linkedca.ProvisionerDetails.ACME:type_name -> linkedca.ACMEProvisioner
	20, // 16: linkedca.ProvisionerDetails.X5C:type_name -> linkedca.X5CProvisioner
	21, // 17: linkedca.ProvisionerDetails.K8sSA:type_name -> linkedca.K8sSAProvisioner
	22, // 18: linkedca.ProvisionerDetails.SSHPOP:type_name -> linkedca.SSHPOPProvisioner
	24, // 19: linkedca.ProvisionerDetails.SCEP:type_name -> linkedca.SCEPProvisioner
	25, // 20: linkedca.ProvisionerDetails.Nebula:type_name -> linkedca.NebulaProvisioner
	5,  // 21: linkedca.ProvisionerList.provisioners:type_name -> linkedca.Provisioner
	10, // 22: linkedca.Claims.x509:type_name -> linkedca.X509Claims
	11, // 23: linkedca.Claims.ssh:type_name -> linkedca.SSHClaims
	12, // 24: linkedca.X509Claims.durations:type_name -> linkedca.Durations
	12, // 25: linkedca.SSHClaims.user_durations:type_name -> linkedca.Durations
	12, // 26: linkedca.SSHClaims.host_durations:type_name -> linkedca.Durations
	1,  // 27: linkedca.ACMEProvisioner.challenges:type_name -> linkedca.ACMEProvisioner.ChallengeType
	2,  // 28: linkedca.ACMEProvisioner.attestation_formats:type_name -> linkedca.ACMEProvisioner.AttestationFormatType
	23, // 29: linkedca.SCEPProvisioner.decrypter:type_name -> linkedca.SCEPDecrypter
	3,  // 30: linkedca.Webhook.kind:type_name -> linkedca.Webhook.Kind
	27, // 31: linkedca.Webhook.bearer_token:type_name -> linkedca.BearerToken
	26, // 32: linkedca.Webhook.basic_auth:type_name -> linkedca.BasicAuth
	4,  // 33: linkedca.Webhook.cert_type:type_name -> linkedca.Webhook.CertType
	34, // [34:34] is the sub-list for method output_type
	34, // [34:34] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_linkedca_provisioners_proto_init() }
func file_linkedca_provisioners_proto_init() {
	if File_linkedca_provisioners_proto != nil {
		return
	}
	file_linkedca_policy_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_linkedca_provisioners_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionerIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionerDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Claims); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*X509Claims); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHClaims); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Durations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWKProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDCProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCPProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ACMEProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*X5CProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*K8SSAProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHPOPProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCEPDecrypter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SCEPProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NebulaProvisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BearerToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_linkedca_provisioners_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Webhook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_linkedca_provisioners_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ProvisionerDetails_JWK)(nil),
		(*ProvisionerDetails_OIDC)(nil),
		(*ProvisionerDetails_GCP)(nil),
		(*ProvisionerDetails_AWS)(nil),
		(*ProvisionerDetails_Azure)(nil),
		(*ProvisionerDetails_ACME)(nil),
		(*ProvisionerDetails_X5C)(nil),
		(*ProvisionerDetails_K8SSA)(nil),
		(*ProvisionerDetails_SSHPOP)(nil),
		(*ProvisionerDetails_SCEP)(nil),
		(*ProvisionerDetails_Nebula)(nil),
	}
	file_linkedca_provisioners_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*Webhook_BearerToken)(nil),
		(*Webhook_BasicAuth)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_linkedca_provisioners_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_linkedca_provisioners_proto_goTypes,
		DependencyIndexes: file_linkedca_provisioners_proto_depIdxs,
		EnumInfos:         file_linkedca_provisioners_proto_enumTypes,
		MessageInfos:      file_linkedca_provisioners_proto_msgTypes,
	}.Build()
	File_linkedca_provisioners_proto = out.File
	file_linkedca_provisioners_proto_rawDesc = nil
	file_linkedca_provisioners_proto_goTypes = nil
	file_linkedca_provisioners_proto_depIdxs = nil
}
